[
  {
    "name": "Feature returns fallthrough",
    "featureKey": "validFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "key"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 0
      },
      "offVariation": null,
      "variations": [
        "FallthroughValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "Feature off without offVariation returns default",
    "featureKey": "validFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "DefaultValue",
        "expectError": false,
        "user": {
          "key": "key"
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": false,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 0
      },
      "offVariation": null,
      "variations": [
        "FallthroughValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "Feature off with offVariation returns offVariation",
    "featureKey": "validFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "OffVariation",
        "expectError": false,
        "user": {
          "key": "key"
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": false,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 0
      },
      "offVariation": 1,
      "variations": [
        "FallthroughValue",
        "OffVariation"
      ],
      "deleted": false
    }
  },
  {
    "name": "Feature deleted returns default",
    "featureKey": "validFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": "key"
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": null,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue"
      ],
      "deleted": true
    }
  },
  {
    "name": "Invalid feature key returns default",
    "featureKey": "INVALID",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": "key"
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "In operator",
    "featureKey": "inFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "InGroup",
        "expectError": false,
        "user": {
          "key": "keyInGroup1",
          "custom": {
            "group": "group1"
          }
        }
      },
      {
        "expectedValue": "InGroup",
        "expectError": false,
        "user": {
          "key": "keyInGroup2",
          "custom": {
            "group": "group2"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyNotIn",
          "custom": {
            "group": "excludedGroup"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyWithoutGroup"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "inFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "group",
              "op": "in",
              "values": [
                "group1",
                "group2"
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": null,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue",
        "InGroup"
      ],
      "deleted": false
    }
  },
  {
    "name": "In operator with dates",
    "featureKey": "inFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "DatesMatchValue",
        "expectError": false,
        "user": {
          "key": "keyMatches",
          "custom": {
            "dateAttr": "1970-01-01T00:00:01.001Z"
          }
        }
      },
      {
        "expectedValue": "DatesMatchValue",
        "expectError": false,
        "user": {
          "key": "keyMatches",
          "custom": {
            "dateAttr": 1001
          }
        }
      },
      {
        "expectedValue": "DatesMatchValue",
        "expectError": false,
        "user": {
          "key": "keyMatches",
          "custom": {
            "dateAttr": "1970-01-01T00:00:01Z"
          }
        }
      },
      {
        "expectedValue": "DatesMatchValue",
        "expectError": false,
        "user": {
          "key": "keyMatches",
          "custom": {
            "dateAttr": "1000"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "notADateKey",
          "custom": {
            "dateAttr": true
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyWithoutAttr"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "inFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "dateAttr",
              "op": "in",
              "values": [
                1001,
                1000
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": null,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue",
        "DatesMatchValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "In operator with numbers",
    "featureKey": "inFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "NumbersMatchValue",
        "expectError": false,
        "user": {
          "key": "keyMatches",
          "custom": {
            "numberAttr": 10
          }
        }
      },
      {
        "expectedValue": "NumbersMatchValue",
        "expectError": false,
        "user": {
          "key": "keyMatches",
          "custom": {
            "numberAttr": "11.01"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "doesNotMatchKey",
          "custom": {
            "numberAttr": 0
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "notANumberKey",
          "custom": {
            "numberAttr": true
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "timeStampKey",
          "custom": {
            "numberAttr": "1970-01-01T00:00:01.001Z"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyWithoutAttr"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "inFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "numberAttr",
              "op": "in",
              "values": [
                10,
                11.01
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": null,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue",
        "NumbersMatchValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "In operator with negation",
    "featureKey": "inFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyInGroup1",
          "custom": {
            "group": "group1"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyInGroup2",
          "custom": {
            "group": "group2"
          }
        }
      },
      {
        "expectedValue": "NotInGroups",
        "expectError": false,
        "user": {
          "key": "keyNotIn",
          "custom": {
            "group": "notInGroups"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyWithoutGroup_IS_THIS_ONE_RIGHT?"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "inFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "group",
              "op": "in",
              "values": [
                "group1",
                "group2"
              ],
              "negate": true
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": null,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue",
        "NotInGroups"
      ],
      "deleted": false
    }
  },
  {
    "name": "StartsWith operator",
    "featureKey": "startsWithFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "StartsWith",
        "expectError": false,
        "user": {
          "key": "startsWithKey",
          "custom": {
            "startsWith": "startsWithAok"
          }
        }
      },
      {
        "expectedValue": "StartsWith",
        "expectError": false,
        "user": {
          "key": "startsWithKey",
          "custom": {
            "startsWith": "startsWithB"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "Fallthrough",
          "custom": {
            "startsWith": "does not startsWith"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "Fallthrough",
          "custom": {
            "startsWith": 4
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "Fallthrough",
          "custom": {
            "startsWith": true
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "startsWithFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "startsWith",
              "op": "startsWith",
              "values": [
                "startsWithA",
                "startsWithB"
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "StartsWith"
      ],
      "deleted": false
    }
  },
  {
    "name": "Endswith operator",
    "featureKey": "endsWithFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "EndsWith",
        "expectError": false,
        "user": {
          "key": "gmail",
          "email": "user@gmail.com"
        }
      },
      {
        "expectedValue": "EndsWith",
        "expectError": false,
        "user": {
          "key": "hotmail",
          "email": "user@hotmail.com"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null,
          "email": "null@gmail.com"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "Fallthrough",
          "email": "fall@through.com"
        }
      }
    ],
    "featureFlag": {
      "key": "endsWithFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "email",
              "op": "endsWith",
              "values": [
                "gmail.com",
                "hotmail.com"
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "EndsWith"
      ],
      "deleted": false
    }
  },
  {
    "name": "Matches operator",
    "featureKey": "matchesFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "MatchesName",
        "expectError": false,
        "user": {
          "key": "matchesNameKey",
          "name": "matchThisName"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "doesNotMatchNameKey",
          "name": "_Don't match This Name"
        }
      },
      {
        "expectedValue": "MatchesCustomAttribute",
        "expectError": false,
        "user": {
          "key": "matchesCustomAttributeKey",
          "custom": {
            "customAttribute": "Ozzz"
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "matchesFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "name",
              "op": "matches",
              "values": [
                "^[A-Za-z]+"
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        },
        {
          "clauses": [
            {
              "attribute": "customAttribute",
              "op": "matches",
              "values": [
                ".*"
              ],
              "negate": false
            }
          ],
          "variation": 3,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "MatchesName",
        "MatchesCustomAttribute"
      ],
      "deleted": false
    }
  },
  {
    "name": "LessThan operator",
    "featureKey": "lessThanFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "LessThan",
        "expectError": false,
        "user": {
          "key": "matchesLessThanKey",
          "custom": {
            "lessThanAttribute": -100.000001
          }
        }
      },
      {
        "expectedValue": "LessThan",
        "expectError": false,
        "user": {
          "key": "matchesLessThanKey",
          "custom": {
            "lessThanAttribute": "-100.000001"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "doesNotMatchLessThanKey",
          "custom": {
            "lessThanAttribute": 10e6
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "missingAttributeKey"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "nullAttributeKey",
          "custom": {
            "lessThanAttribute": null
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "lessThanFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "lessThanAttribute",
              "op": "lessThan",
              "values": [
                -100.0
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "LessThan"
      ],
      "deleted": false
    }
  },
  {
    "name": "LessThanOrEqual operator",
    "featureKey": "lessThanOrEqualFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "LessThanOrEqual",
        "expectError": false,
        "user": {
          "key": "matchesLessThanOrEqualKey",
          "custom": {
            "lessThanOrEqualAttribute": -100.0
          }
        }
      },
      {
        "expectedValue": "LessThanOrEqual",
        "expectError": false,
        "user": {
          "key": "matchesLessThanOrEqualKey",
          "custom": {
            "lessThanOrEqualAttribute": "-100.00"
          }
        }
      },
      {
        "expectedValue": "LessThanOrEqual",
        "expectError": false,
        "user": {
          "key": "matchesLessThanOrEqualKey",
          "custom": {
            "lessThanOrEqualAttribute": "-100.01"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "doesNotMatchLessThanKey",
          "custom": {
            "lessThanOrEqualAttribute": 10e6
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "missingAttributeKey"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "nullAttributeKey",
          "custom": {
            "lessThanOrEqualAttribute": null
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "lessThanOrEqualFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "lessThanOrEqualAttribute",
              "op": "lessThanOrEqual",
              "values": [
                -100.0
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "LessThanOrEqual"
      ],
      "deleted": false
    }
  },
  {
    "name": "GreaterThan operator",
    "featureKey": "greaterThanFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "GreaterThan",
        "expectError": false,
        "user": {
          "key": "matchesGreaterThanKey",
          "custom": {
            "greaterThanAttribute": 99.0001
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "doesNotMatchGreaterThanKey",
          "custom": {
            "greaterThanAttribute": 10e-6
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "missingAttributeKey"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "nullAttributeKey",
          "custom": {
            "greaterThanAttribute": null
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "greaterThanFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "greaterThanAttribute",
              "op": "greaterThan",
              "values": [
                99
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "GreaterThan"
      ],
      "deleted": false
    }
  },
  {
    "name": "GreaterThanOrEqual operator",
    "featureKey": "greaterThanOrEqualFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "GreaterThanOrEqual",
        "expectError": false,
        "user": {
          "key": "matchesGreaterThanOrEqualKey",
          "custom": {
            "greaterThanOrEqualAttribute": 99
          }
        }
      },
      {
        "expectedValue": "GreaterThanOrEqual",
        "expectError": false,
        "user": {
          "key": "matchesGreaterThanOrEqualKey",
          "custom": {
            "greaterThanOrEqualAttribute": "99.0001"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "doesNotMatchGreaterThanOrEqualKey",
          "custom": {
            "greaterThanOrEqualAttribute": 10e-6
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "missingAttributeKey"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "nullAttributeKey",
          "custom": {
            "greaterThanOrEqualAttribute": null
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "greaterThanOrEqualFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "greaterThanOrEqualAttribute",
              "op": "greaterThanOrEqual",
              "values": [
                99
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "GreaterThanOrEqual"
      ],
      "deleted": false
    }
  },
  {
    "name": "Before operator",
    "featureKey": "beforeFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "BeforeValue",
        "expectError": false,
        "user": {
          "key": "beforeKey",
          "custom": {
            "beforeAttribute": 999
          }
        }
      },
      {
        "expectedValue": "BeforeValue",
        "expectError": false,
        "user": {
          "key": "beforeKey",
          "custom": {
            "beforeAttribute": "999"
          }
        }
      },
      {
        "expectedValue": "BeforeValue",
        "expectError": false,
        "user": {
          "key": "beforeKey",
          "custom": {
            "beforeAttribute": "1970-01-01T00:00:00.500Z"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "equalsDoesNotMatchBeforeKey",
          "custom": {
            "beforeAttribute": 1000
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "equalsDoesNotMatchBeforeKey",
          "custom": {
            "beforeAttribute": "1970-01-01T00:00:01Z"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "afterDoesNotMatchBeforeKey",
          "custom": {
            "beforeAttribute": 1001
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "afterDoesNotMatchBeforeKey",
          "custom": {
            "beforeAttribute": "1970-01-01T00:00:01.001Z"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "invalidTimestampNotMatchBeforeKey",
          "custom": {
            "beforeAttribute": "1970-01-01"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "trueDoesNotMatchBeforeKey",
          "custom": {
            "beforeAttribute": true
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "missingAttributeKey"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "nullAttributeKey",
          "custom": {
            "beforeAttribute": null
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "beforeFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "beforeAttribute",
              "op": "before",
              "values": [
                1000
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "BeforeValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "After operator",
    "featureKey": "afterFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "AfterValue",
        "expectError": false,
        "user": {
          "key": "afterKey",
          "custom": {
            "afterAttribute": 1001
          }
        }
      },
      {
        "expectedValue": "AfterValue",
        "expectError": false,
        "user": {
          "key": "afterKey",
          "custom": {
            "afterAttribute": "1001"
          }
        }
      },
      {
        "expectedValue": "AfterValue",
        "expectError": false,
        "user": {
          "key": "afterKey",
          "custom": {
            "afterAttribute": "1970-01-01T00:00:01.001Z"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "equalsDoesNotMatchAfterKey",
          "custom": {
            "afterAttribute": 1000
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "equalsDoesNotMatchAfterKey",
          "custom": {
            "afterAttribute": "1970-01-01T00:00:01Z"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "beforeDoesNotMatchAfterKey",
          "custom": {
            "afterAttribute": 999
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "beforeDoesNotMatchAfterKey",
          "custom": {
            "afterAttribute": "1970-01-01T00:00:00.999Z"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "missingAttributeKey"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "nullAttributeKey",
          "custom": {
            "greaterThanAttribute": null
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "afterFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "afterAttribute",
              "op": "after",
              "values": [
                1000
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "AfterValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "Multiple clauses in one rule",
    "featureKey": "clausesKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "MatchesAllClauses",
        "expectError": false,
        "user": {
          "key": "inAll",
          "email": "user@EndsWithB.com",
          "custom": {
            "group": "GroupA",
            "exclude": "false"
          }
        }
      },
      {
        "expectedValue": "MatchesAllClauses",
        "expectError": false,
        "user": {
          "key": "inAll",
          "email": "user@EndsWithA.com",
          "custom": {
            "group": "GroupB",
            "exclude": "no"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "inOne",
          "email": "user@EndsWithA.com",
          "custom": {
            "group": "GroupNotInTheClauses"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "excluded",
          "email": "user@EndsWithA.com",
          "custom": {
            "group": "GroupA",
            "exclude": "yes"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "inNone",
          "email": "user@notIncluded.com",
          "custom": {
            "group": "GroupNotInTheClauses"
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null,
          "email": "user@EndsWithA.com",
          "custom": {
            "group": "GroupB"
          }
        }
      }
    ],
    "featureFlag": {
      "key": "clausesKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "email",
              "op": "endsWith",
              "values": [
                "EndsWithA.com",
                "EndsWithB.com"
              ],
              "negate": false
            },
            {
              "attribute": "group",
              "op": "in",
              "values": [
                "GroupA",
                "GroupB"
              ],
              "negate": false
            },
            {
              "attribute": "exclude",
              "op": "in",
              "values": [
                "true",
                "yes"
              ],
              "negate": true
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "MatchesAllClauses"
      ],
      "deleted": false
    }
  }
]
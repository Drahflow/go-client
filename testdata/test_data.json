[
  {
    "name": "Feature returns fallthrough",
    "featureKey": "validFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "key"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 0
      },
      "offVariation": null,
      "variations": [
        "FallthroughValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "Feature off without offVariation returns default",
    "featureKey": "validFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "DefaultValue",
        "expectError": false,
        "user": {
          "key": "key"
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": false,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 0
      },
      "offVariation": null,
      "variations": [
        "FallthroughValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "Feature off with offVariation returns offVariation",
    "featureKey": "validFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "OffVariation",
        "expectError": false,
        "user": {
          "key": "key"
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": false,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 0
      },
      "offVariation": 1,
      "variations": [
        "FallthroughValue",
        "OffVariation"
      ],
      "deleted": false
    }
  },
  {
    "name": "Feature deleted returns default",
    "featureKey": "validFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": "key"
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": null,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue"
      ],
      "deleted": true
    }
  },
  {
    "name": "Invalid feature key returns default",
    "featureKey": "INVALID",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": "key"
        }
      }
    ],
    "featureFlag": {
      "key": "validFeatureKey",
      "version": 0,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue"
      ],
      "deleted": false
    }
  },
  {
    "name": "In operator",
    "featureKey": "inFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "InGroup",
        "expectError": false,
        "user": {
          "key": "keyInGroup1",
          "custom": {
            "group": "group1"
          }
        }
      },
      {
        "expectedValue": "InGroup",
        "expectError": false,
        "user": {
          "key": "keyInGroup2",
          "custom": {
            "group": "group2"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyNotIn",
          "custom": {
            "group": "excludedGroup"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyWithoutGroup"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "inFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "group",
              "op": "in",
              "values": [
                "group1",
                "group2"
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": null,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue",
        "InGroup"
      ],
      "deleted": false
    }
  },
  {
    "name": "In operator with negation",
    "featureKey": "inFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyInGroup1",
          "custom": {
            "group": "group1"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyInGroup2",
          "custom": {
            "group": "group2"
          }
        }
      },
      {
        "expectedValue": "NotInGroups",
        "expectError": false,
        "user": {
          "key": "keyNotIn",
          "custom": {
            "group": "notInGroups"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "keyWithoutGroup_IS_THIS_ONE_RIGHT?"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null
        }
      }
    ],
    "featureFlag": {
      "key": "inFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "group",
              "op": "in",
              "values": [
                "group1",
                "group2"
              ],
              "negate": true
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": null,
      "variations": [
        "You shouldn't get this",
        "FallthroughValue",
        "NotInGroups"
      ],
      "deleted": false
    }
  },
  {
    "name": "EndsWith operator",
    "featureKey": "endsWithFeatureKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "EndsWith",
        "expectError": false,
        "user": {
          "key": "gmail",
          "email": "user@gmail.com"
        }
      },
      {
        "expectedValue": "EndsWith",
        "expectError": false,
        "user": {
          "key": "hotmail",
          "email": "user@hotmail.com"
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null,
          "email": "null@gmail.com"
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "Fallthrough",
          "email": "fall@through.com"
        }
      }
    ],
    "featureFlag": {
      "key": "endsWithFeatureKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "email",
              "op": "endsWith",
              "values": [
                "gmail.com",
                "hotmail.com"
              ],
              "negate": false
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "EndsWith"
      ],
      "deleted": false
    }
  },
  {
    "name": "Multiple clauses in one rule",
    "featureKey": "clausesKey",
    "defaultValue": "DefaultValue",
    "usersAndExpectations": [
      {
        "expectedValue": "MatchesAllClauses",
        "expectError": false,
        "user": {
          "key": "inAll",
          "email": "user@EndsWithB.com",
          "custom": {
            "group": "GroupA",
            "exclude": "false"
          }
        }
      },
      {
        "expectedValue": "MatchesAllClauses",
        "expectError": false,
        "user": {
          "key": "inAll",
          "email": "user@EndsWithA.com",
          "custom": {
            "group": "GroupB",
            "exclude": "no"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "inOne",
          "email": "user@EndsWithA.com",
          "custom": {
            "group": "GroupNotInTheClauses"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "excluded",
          "email": "user@EndsWithA.com",
          "custom": {
            "group": "GroupA",
            "exclude": "yes"
          }
        }
      },
      {
        "expectedValue": "FallthroughValue",
        "expectError": false,
        "user": {
          "key": "inNone",
          "email": "user@notIncluded.com",
          "custom": {
            "group": "GroupNotInTheClauses"
          }
        }
      },
      {
        "expectedValue": "DefaultValue",
        "expectError": true,
        "user": {
          "key": null,
          "email": "user@EndsWithA.com",
          "custom": {
            "group": "GroupB"
          }
        }
      }
    ],
    "featureFlag": {
      "key": "clausesKey",
      "version": 1,
      "on": true,
      "salt": "",
      "sel": "",
      "targets": [],
      "rules": [
        {
          "clauses": [
            {
              "attribute": "email",
              "op": "endsWith",
              "values": [
                "EndsWithA.com",
                "EndsWithB.com"
              ],
              "negate": false
            },
            {
              "attribute": "group",
              "op": "in",
              "values": [
                "GroupA",
                "GroupB"
              ],
              "negate": false
            },
            {
              "attribute": "exclude",
              "op": "in",
              "values": [
                "true",
                "yes"
              ],
              "negate": true
            }
          ],
          "variation": 2,
          "rollout": null
        }
      ],
      "fallthrough": {
        "variation": 1
      },
      "offVariation": 0,
      "variations": [
        "OffVariation",
        "FallthroughValue",
        "MatchesAllClauses"
      ],
      "deleted": false
    }
  }
]
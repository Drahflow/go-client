version: 2

experimental:
  notify:
    branches:
      only:
        - master
        - v2

jobs:
  go-test:
    working_directory: ~/go/src/github.com/launchdarkly/go-client-private

    docker:
      - image: circleci/golang:1.8
        environment:
          - COMMON_GO_PACKAGES: >
              github.com/GoASTScanner/gas/...
              github.com/kardianos/govendor
              golang.org/x/tools/cmd/goimports
              honnef.co/go/tools/cmd/staticcheck
      - image: redis

    steps:
      - checkout

      - run: echo $GOPATH
      - run: echo $GOBIN
      - run: |
          cat >> $BASH_ENV << EOF
          export GOPATH=~/go
          export GOBIN=~/go/bin
          export PATH="$HOME/go/bin:$GOROOT/bin:$PATH"
          EOF

      - run: go get -d -u -v $COMMON_GO_PACKAGES
      - run: go install $COMMON_GO_PACKAGES
      - run: go version

      # Source code checks
      - run: |
          govendor status && exit 0
          govendor sync -n  # Spit out any sync errors that may have caused the status failure
          exit 1

      # TOOD: Fix this after eventsource passes
      # - run: govendor tool vet -composites=false +local
      - run: gas -exclude=G101,G104 ./...
      - run: staticcheck $(govendor list -no-status +l)

      - run:
          name: Wait for services to be ready
          command: dockerize -wait tcp://localhost:6379 -timeout 1m  # redis

      - run: govendor test -race +local

workflows:
  version: 2
  test_and_package:
    jobs:
      - go-test
